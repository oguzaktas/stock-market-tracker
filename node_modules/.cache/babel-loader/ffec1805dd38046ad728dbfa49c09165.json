{"ast":null,"code":"import { iex } from './iex.js';\nexport const stock = {\n  latestPrice: (ticker, callback) => {\n    fetch(stock.latestPriceURL(ticker)).then(response => response.json()).then(data => callback(stock.formatPriceData(data)));\n  },\n  latestPriceURL: ticker => {\n    return `${iex.base_url}/stock/${ticker}/intraday-prices?token=${iex.api_token}&chartLast=1`; // &exactDate=20200512\n  },\n  formatPriceData: data => {\n    const stockData = data[data.length - 1];\n    const formattedData = {};\n    formattedData.price = stockData.close;\n    formattedData.date = stockData.date;\n    formattedData.time = stockData.label;\n    formattedData.numberOfTrades = stockData.numberOfTrades;\n    return formattedData;\n  },\n  getYesterdaysClose: (ticker, lastTradingDate, callback) => {\n    if (lastTradingDate !== \"\" && lastTradingDate !== undefined) {\n      const url = stock.yesterdaysCloseURL(ticker, stock.formatDate(lastTradingDate));\n      fetch(url).then(response => response.json()).then(data => callback(stock.formatPriceData(data)));\n    }\n  },\n  getLastTradingDate: () => {\n    const today = new Date().toISOString().split('T')[0].replace(/-/g, '');\n    console.log(today);\n    const url = `${iex.base_url}/ref-data/us/dates/trade/last/1/${today}?token=${iex.api_token}`;\n    return fetch(url).then(res => res.json());\n  },\n  yesterdaysCloseURL: (ticker, lastTradingDate) => {\n    // var lastTradingDate = stock.formatDate(date);\n    // https://cloud.iexapis.com/stable/ref-data/us/dates/trade/last/1/20200512?token=pk_12ff756a55f3487285968715b4e7e7d1\n    return `${iex.base_url}/stock/${ticker}/intraday-prices?token=${iex.api_token}&exactDate=${lastTradingDate}&chartLast=1`;\n  },\n  formatDate: date => {\n    return new Date(date).toISOString().split('T')[0].replace(/-/g, '');\n  }\n};","map":{"version":3,"sources":["/home/oguz/Downloads/GitHub/stock-market-tracker/src/stock.js"],"names":["iex","stock","latestPrice","ticker","callback","fetch","latestPriceURL","then","response","json","data","formatPriceData","base_url","api_token","stockData","length","formattedData","price","close","date","time","label","numberOfTrades","getYesterdaysClose","lastTradingDate","undefined","url","yesterdaysCloseURL","formatDate","getLastTradingDate","today","Date","toISOString","split","replace","console","log","res"],"mappings":"AAAA,SAASA,GAAT,QAAoB,UAApB;AAEA,OAAO,MAAMC,KAAK,GAAG;AAEjBC,EAAAA,WAAW,EAAE,CAACC,MAAD,EAASC,QAAT,KAAsB;AAC/BC,IAAAA,KAAK,CAACJ,KAAK,CAACK,cAAN,CAAqBH,MAArB,CAAD,CAAL,CACCI,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAUN,QAAQ,CAACH,KAAK,CAACU,eAAN,CAAsBD,IAAtB,CAAD,CAFxB;AAGH,GANgB;AAQjBJ,EAAAA,cAAc,EAAGH,MAAD,IAAY;AACxB,WAAQ,GAAEH,GAAG,CAACY,QAAS,UAAST,MAAO,0BAAyBH,GAAG,CAACa,SAAU,cAA9E,CADwB,CAExB;AACH,GAXgB;AAajBF,EAAAA,eAAe,EAAGD,IAAD,IAAU;AACvB,UAAMI,SAAS,GAAGJ,IAAI,CAACA,IAAI,CAACK,MAAL,GAAc,CAAf,CAAtB;AACA,UAAMC,aAAa,GAAG,EAAtB;AACAA,IAAAA,aAAa,CAACC,KAAd,GAAsBH,SAAS,CAACI,KAAhC;AACAF,IAAAA,aAAa,CAACG,IAAd,GAAqBL,SAAS,CAACK,IAA/B;AACAH,IAAAA,aAAa,CAACI,IAAd,GAAqBN,SAAS,CAACO,KAA/B;AACAL,IAAAA,aAAa,CAACM,cAAd,GAA+BR,SAAS,CAACQ,cAAzC;AACA,WAAON,aAAP;AACH,GArBgB;AAuBjBO,EAAAA,kBAAkB,EAAE,CAACpB,MAAD,EAASqB,eAAT,EAA0BpB,QAA1B,KAAuC;AACvD,QAAIoB,eAAe,KAAK,EAApB,IAA0BA,eAAe,KAAKC,SAAlD,EAA6D;AACzD,YAAMC,GAAG,GAAGzB,KAAK,CAAC0B,kBAAN,CAAyBxB,MAAzB,EAAiCF,KAAK,CAAC2B,UAAN,CAAiBJ,eAAjB,CAAjC,CAAZ;AACAnB,MAAAA,KAAK,CAACqB,GAAD,CAAL,CACCnB,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAUN,QAAQ,CAACH,KAAK,CAACU,eAAN,CAAsBD,IAAtB,CAAD,CAFxB;AAGH;AACJ,GA9BgB;AAgCjBmB,EAAAA,kBAAkB,EAAE,MAAM;AACtB,UAAMC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,EAAuCC,OAAvC,CAA+C,IAA/C,EAAqD,EAArD,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,UAAMJ,GAAG,GAAI,GAAE1B,GAAG,CAACY,QAAS,mCAAkCkB,KAAM,UAAS9B,GAAG,CAACa,SAAU,EAA3F;AACA,WAAOR,KAAK,CAACqB,GAAD,CAAL,CAAWnB,IAAX,CAAiB8B,GAAD,IAASA,GAAG,CAAC5B,IAAJ,EAAzB,CAAP;AACH,GArCgB;AAuCjBkB,EAAAA,kBAAkB,EAAE,CAACxB,MAAD,EAASqB,eAAT,KAA6B;AAC7C;AACA;AACA,WAAQ,GAAExB,GAAG,CAACY,QAAS,UAAST,MAAO,0BAAyBH,GAAG,CAACa,SAAU,cAAaW,eAAgB,cAA3G;AACH,GA3CgB;AA6CjBI,EAAAA,UAAU,EAAGT,IAAD,IAAU;AAClB,WAAO,IAAIY,IAAJ,CAASZ,IAAT,EAAea,WAAf,GAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,EAA2CC,OAA3C,CAAmD,IAAnD,EAAyD,EAAzD,CAAP;AACH;AA/CgB,CAAd","sourcesContent":["import { iex } from './iex.js';\n\nexport const stock = {\n\n    latestPrice: (ticker, callback) => {\n        fetch(stock.latestPriceURL(ticker))\n        .then((response) => response.json())\n        .then((data) => callback(stock.formatPriceData(data)))\n    },\n\n    latestPriceURL: (ticker) => {\n        return `${iex.base_url}/stock/${ticker}/intraday-prices?token=${iex.api_token}&chartLast=1`\n        // &exactDate=20200512\n    },\n\n    formatPriceData: (data) => {\n        const stockData = data[data.length - 1]\n        const formattedData = {}\n        formattedData.price = stockData.close\n        formattedData.date = stockData.date\n        formattedData.time = stockData.label\n        formattedData.numberOfTrades = stockData.numberOfTrades\n        return formattedData\n    },\n\n    getYesterdaysClose: (ticker, lastTradingDate, callback) => {\n        if (lastTradingDate !== \"\" && lastTradingDate !== undefined) {\n            const url = stock.yesterdaysCloseURL(ticker, stock.formatDate(lastTradingDate))\n            fetch(url)\n            .then((response) => response.json())\n            .then((data) => callback(stock.formatPriceData(data)))\n        }\n    },\n\n    getLastTradingDate: () => {\n        const today = new Date().toISOString().split('T')[0].replace(/-/g, '');\n        console.log(today)\n        const url = `${iex.base_url}/ref-data/us/dates/trade/last/1/${today}?token=${iex.api_token}`\n        return fetch(url).then((res) => res.json());\n    },\n\n    yesterdaysCloseURL: (ticker, lastTradingDate) => {\n        // var lastTradingDate = stock.formatDate(date);\n        // https://cloud.iexapis.com/stable/ref-data/us/dates/trade/last/1/20200512?token=pk_12ff756a55f3487285968715b4e7e7d1\n        return `${iex.base_url}/stock/${ticker}/intraday-prices?token=${iex.api_token}&exactDate=${lastTradingDate}&chartLast=1`\n    },\n\n    formatDate: (date) => {\n        return new Date(date).toISOString().split('T')[0].replace(/-/g, '')\n    }\n\n}"]},"metadata":{},"sourceType":"module"}