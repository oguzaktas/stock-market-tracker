{"ast":null,"code":"import { iex } from './iex.js';\nexport const stock = {\n  latestPrice: (ticker, callback) => {\n    fetch(stock.latestPriceURL(ticker)).then(response => response.json()).then(data => callback(stock.formatPriceData(data)));\n  },\n  latestPriceURL: ticker => {\n    return `${iex.base_url}/stock/${ticker}/intraday-prices?token=${iex.api_token}&chartLast=1`; // &exactDate=20200512\n  },\n  formatPriceData: data => {\n    const stockData = data[data.length - 1];\n    const formattedData = {};\n    formattedData.price = stockData.close;\n    formattedData.date = stockData.date;\n    formattedData.time = stockData.label;\n    formattedData.numberOfTrades = stockData.numberOfTrades;\n    return formattedData;\n  },\n  getYesterdaysClose: (ticker, date, callback) => {\n    stock.getLastTradingDate(date).then(data => {\n      console.log(data);\n      fetch(stock.yesterdaysCloseURL(ticker, date)).then(response => response.json()).then(data => callback(stock.formatPriceData(data)));\n    });\n  },\n  getLastTradingDate: date => {\n    var today = new Date(date).toISOString().split('T')[0].replace(/-/g, '');\n    const url = `${iex.base_url}/ref-data/us/dates/trade/last/1/${today}?token=${iex.api_token}`;\n    return fetch(url).then(res => res.json());\n  },\n  yesterdaysCloseURL: (ticker, date) => {\n    // https://cloud.iexapis.com/stable/ref-data/us/dates/trade/last/1/20200512?token=pk_12ff756a55f3487285968715b4e7e7d1\n    return `${iex.base_url}/stock/${ticker}/intraday-prices?token=${iex.api_token}&exactDate=20200511&chartLast=1`;\n  }\n};","map":{"version":3,"sources":["/home/oguz/Downloads/GitHub/stock-market-tracker/src/stock.js"],"names":["iex","stock","latestPrice","ticker","callback","fetch","latestPriceURL","then","response","json","data","formatPriceData","base_url","api_token","stockData","length","formattedData","price","close","date","time","label","numberOfTrades","getYesterdaysClose","getLastTradingDate","console","log","yesterdaysCloseURL","today","Date","toISOString","split","replace","url","res"],"mappings":"AAAA,SAASA,GAAT,QAAoB,UAApB;AAEA,OAAO,MAAMC,KAAK,GAAG;AAEjBC,EAAAA,WAAW,EAAE,CAACC,MAAD,EAASC,QAAT,KAAsB;AAC/BC,IAAAA,KAAK,CAACJ,KAAK,CAACK,cAAN,CAAqBH,MAArB,CAAD,CAAL,CACCI,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAUN,QAAQ,CAACH,KAAK,CAACU,eAAN,CAAsBD,IAAtB,CAAD,CAFxB;AAGH,GANgB;AAQjBJ,EAAAA,cAAc,EAAGH,MAAD,IAAY;AACxB,WAAQ,GAAEH,GAAG,CAACY,QAAS,UAAST,MAAO,0BAAyBH,GAAG,CAACa,SAAU,cAA9E,CADwB,CAExB;AACH,GAXgB;AAajBF,EAAAA,eAAe,EAAGD,IAAD,IAAU;AACvB,UAAMI,SAAS,GAAGJ,IAAI,CAACA,IAAI,CAACK,MAAL,GAAc,CAAf,CAAtB;AACA,UAAMC,aAAa,GAAG,EAAtB;AACAA,IAAAA,aAAa,CAACC,KAAd,GAAsBH,SAAS,CAACI,KAAhC;AACAF,IAAAA,aAAa,CAACG,IAAd,GAAqBL,SAAS,CAACK,IAA/B;AACAH,IAAAA,aAAa,CAACI,IAAd,GAAqBN,SAAS,CAACO,KAA/B;AACAL,IAAAA,aAAa,CAACM,cAAd,GAA+BR,SAAS,CAACQ,cAAzC;AACA,WAAON,aAAP;AACH,GArBgB;AAuBjBO,EAAAA,kBAAkB,EAAE,CAACpB,MAAD,EAASgB,IAAT,EAAef,QAAf,KAA4B;AAC5CH,IAAAA,KAAK,CAACuB,kBAAN,CAAyBL,IAAzB,EAA+BZ,IAA/B,CAAqCG,IAAD,IAAU;AAC1Ce,MAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACAL,MAAAA,KAAK,CAACJ,KAAK,CAAC0B,kBAAN,CAAyBxB,MAAzB,EAAiCgB,IAAjC,CAAD,CAAL,CACKZ,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWG,IAAD,IAAUN,QAAQ,CAACH,KAAK,CAACU,eAAN,CAAsBD,IAAtB,CAAD,CAF5B;AAGH,KALD;AAMH,GA9BgB;AAgCjBc,EAAAA,kBAAkB,EAAGL,IAAD,IAAU;AAC1B,QAAIS,KAAK,GAAG,IAAIC,IAAJ,CAASV,IAAT,EAAeW,WAAf,GAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,EAA2CC,OAA3C,CAAmD,IAAnD,EAAyD,EAAzD,CAAZ;AACA,UAAMC,GAAG,GAAI,GAAEjC,GAAG,CAACY,QAAS,mCAAkCgB,KAAM,UAAS5B,GAAG,CAACa,SAAU,EAA3F;AACA,WAAOR,KAAK,CAAC4B,GAAD,CAAL,CAAW1B,IAAX,CAAiB2B,GAAD,IAASA,GAAG,CAACzB,IAAJ,EAAzB,CAAP;AACH,GApCgB;AAsCjBkB,EAAAA,kBAAkB,EAAE,CAACxB,MAAD,EAASgB,IAAT,KAAkB;AAClC;AACA,WAAQ,GAAEnB,GAAG,CAACY,QAAS,UAAST,MAAO,0BAAyBH,GAAG,CAACa,SAAU,iCAA9E;AACH;AAzCgB,CAAd","sourcesContent":["import { iex } from './iex.js';\n\nexport const stock = {\n\n    latestPrice: (ticker, callback) => {\n        fetch(stock.latestPriceURL(ticker))\n        .then((response) => response.json())\n        .then((data) => callback(stock.formatPriceData(data)))\n    },\n\n    latestPriceURL: (ticker) => {\n        return `${iex.base_url}/stock/${ticker}/intraday-prices?token=${iex.api_token}&chartLast=1`\n        // &exactDate=20200512\n    },\n\n    formatPriceData: (data) => {\n        const stockData = data[data.length - 1]\n        const formattedData = {}\n        formattedData.price = stockData.close\n        formattedData.date = stockData.date\n        formattedData.time = stockData.label\n        formattedData.numberOfTrades = stockData.numberOfTrades\n        return formattedData\n    },\n\n    getYesterdaysClose: (ticker, date, callback) => {\n        stock.getLastTradingDate(date).then((data) => {\n            console.log(data)\n            fetch(stock.yesterdaysCloseURL(ticker, date))\n                .then((response) => response.json())\n                .then((data) => callback(stock.formatPriceData(data)))\n        })\n    },\n\n    getLastTradingDate: (date) => {\n        var today = new Date(date).toISOString().split('T')[0].replace(/-/g, '')\n        const url = `${iex.base_url}/ref-data/us/dates/trade/last/1/${today}?token=${iex.api_token}`\n        return fetch(url).then((res) => res.json());\n    },\n\n    yesterdaysCloseURL: (ticker, date) => {\n        // https://cloud.iexapis.com/stable/ref-data/us/dates/trade/last/1/20200512?token=pk_12ff756a55f3487285968715b4e7e7d1\n        return `${iex.base_url}/stock/${ticker}/intraday-prices?token=${iex.api_token}&exactDate=20200511&chartLast=1`\n    }\n\n}"]},"metadata":{},"sourceType":"module"}