{"ast":null,"code":"var _jsxFileName = \"/home/oguz/Downloads/GitHub/stock-market-tracker/src/components/StockRow.js\";\nimport React, { Component } from 'react'; // import { iex } from '../iex.js';\n\nimport { stock } from '../stock.js';\n\nclass StockRow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      price: null,\n      date: null,\n      time: null,\n      numberOfTrades: null,\n      dollar_change: null,\n      percent_change: null\n    };\n  }\n\n  changeStyle() {\n    var color;\n\n    if (this.state.dollar_change > 0) {\n      color = '#4caf50';\n    } else {\n      color = '#e53935';\n    }\n\n    return {\n      color: color,\n      // if it is negative put the red (#e53935)\n      fontSize: '0.8rem',\n      marginLeft: 5\n    };\n  }\n\n  applyData(data) {\n    const formattedPrice = data.price == undefined ? null : data.price.toFixed(2);\n    this.setState({\n      price: formattedPrice,\n      date: data.date,\n      time: data.time,\n      numberOfTrades: data.numberOfTrades\n    });\n  }\n\n  componentDidMount() {\n    /*\n    const url = `${iex.base_url}/${this.props.ticker}/intraday-prices?token=${iex.api_token}&chartLast=1`\n    // https://cloud.iexapis.com/stable/stock/aapl/intraday-prices?token=pk_12ff756a55f3487285968715b4e7e7d1&chartLast=20\n     fetch(url).then((response) => response.json())\n    */\n    stock.latestPrice(this.props.ticker, this.applyData.bind(this));\n  }\n\n  componentDidUpdate(prevProps) {\n    this.setCanRetrieveClose(prevProps);\n\n    if (this.state.canRetrieveClose && this.state.price != null) {\n      stock.getYesterdaysClose(this.props.ticker, this.props.lastTradingDate, yesterday => {\n        const dollar_change = (this.state.price - yesterday.price).toFixed(3);\n        const percent_change = (100 * dollar_change / yesterday.price).toFixed(2);\n        this.setState({\n          dollar_change: ` ${dollar_change}`,\n          percent_change: `(${percent_change}%)`,\n          canRetrieveClose: false\n        });\n      });\n    }\n  }\n\n  setCanRetrieveClose(prevProps) {\n    if (prevProps.lastTradingDate == null && this.props.lastTradingDate != null) {\n      this.setState({\n        canRetrieveClose: true\n      });\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n\n      /*\n      <li className=\"list-group-item\">\n          <b>{this.props.name} - {this.props.ticker}</b> ${this.state.price}\n          <span className=\"change\" style={this.changeStyle()}>\n              {this.state.dollar_change}\n              &nbsp;\n              {this.state.percent_change}\n          </span>\n      </li>\n      */\n      React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colspan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 16\n        }\n      }, this.props.name), /*#__PURE__*/React.createElement(\"td\", {\n        colspan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 16\n        }\n      }, this.props.ticker), /*#__PURE__*/React.createElement(\"td\", {\n        colspan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 16\n        }\n      }, this.state.price, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"change\",\n        style: this.changeStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 16\n        }\n      }, this.state.dollar_change, \" \\xA0 \", this.state.percent_change)), /*#__PURE__*/React.createElement(\"td\", {\n        colspan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 16\n        }\n      }, this.state.date), /*#__PURE__*/React.createElement(\"td\", {\n        colspan: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 16\n        }\n      }, this.state.time), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 16\n        }\n      }, this.state.numberOfTrades))\n    );\n  }\n\n}\n\nexport default StockRow;\n/*\n    <tr>\n        <td>{this.props.name}</td>\n        <td>{this.props.ticker}</td>\n        <td>{this.state.data.price}</td>\n        <td>{this.state.data.date}</td>\n        <td>{this.state.data.time}</td>\n        <td>{this.state.data.numberOfTrades}</td>\n    </tr>\n*/","map":{"version":3,"sources":["/home/oguz/Downloads/GitHub/stock-market-tracker/src/components/StockRow.js"],"names":["React","Component","stock","StockRow","constructor","props","state","price","date","time","numberOfTrades","dollar_change","percent_change","changeStyle","color","fontSize","marginLeft","applyData","data","formattedPrice","undefined","toFixed","setState","componentDidMount","latestPrice","ticker","bind","componentDidUpdate","prevProps","setCanRetrieveClose","canRetrieveClose","getYesterdaysClose","lastTradingDate","yesterday","render","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import { iex } from '../iex.js';\nimport { stock } from '../stock.js'\n\n\nclass StockRow extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            price: null,\n            date: null,\n            time: null,\n            numberOfTrades: null,\n            dollar_change: null,\n            percent_change: null,\n        }\n    }\n\n    changeStyle() {\n        var color;\n        if (this.state.dollar_change > 0) {\n            color = '#4caf50'\n        } else {\n            color = '#e53935'\n        }\n        return {\n            color: color, // if it is negative put the red (#e53935)\n            fontSize: '0.8rem',\n            marginLeft: 5\n        }\n    }\n\n    applyData(data) {\n        const formattedPrice = (data.price == undefined) ? null : data.price.toFixed(2)\n        this.setState({\n            price: formattedPrice,\n            date: data.date,\n            time: data.time,\n            numberOfTrades: data.numberOfTrades,\n        });\n    }\n\n    componentDidMount() {\n        /*\n        const url = `${iex.base_url}/${this.props.ticker}/intraday-prices?token=${iex.api_token}&chartLast=1`\n        // https://cloud.iexapis.com/stable/stock/aapl/intraday-prices?token=pk_12ff756a55f3487285968715b4e7e7d1&chartLast=20\n\n        fetch(url).then((response) => response.json())\n        */\n        stock.latestPrice(this.props.ticker, this.applyData.bind(this))\n    }\n    \n    componentDidUpdate(prevProps) {\n        this.setCanRetrieveClose(prevProps)\n        if (this.state.canRetrieveClose && this.state.price != null) {\n            stock.getYesterdaysClose(this.props.ticker, this.props.lastTradingDate, (yesterday) => {\n                const dollar_change = (this.state.price - yesterday.price).toFixed(3);\n                const percent_change = (100 * dollar_change / yesterday.price).toFixed(2)\n                \n                this.setState({\n                    dollar_change: ` ${dollar_change}`,\n                    percent_change: `(${percent_change}%)`,\n                    canRetrieveClose: false\n                })\n            })\n        }\n    }\n\n    setCanRetrieveClose(prevProps) {\n        if (prevProps.lastTradingDate == null && this.props.lastTradingDate != null) {\n            this.setState({\n                canRetrieveClose: true\n            })\n        }\n    }\n\n    render() {\n        return (\n            /*\n            <li className=\"list-group-item\">\n                <b>{this.props.name} - {this.props.ticker}</b> ${this.state.price}\n                <span className=\"change\" style={this.changeStyle()}>\n                    {this.state.dollar_change}\n                    &nbsp;\n                    {this.state.percent_change}\n                </span>\n            </li>\n            */\n           <tr>\n               <td colspan=\"2\">{this.props.name}</td>\n               <td colspan=\"2\">{this.props.ticker}</td>\n               <td colspan=\"2\">{this.state.price}\n               <span className=\"change\" style={this.changeStyle()}>\n                {this.state.dollar_change} &nbsp; {this.state.percent_change}</span></td>\n               <td colspan=\"2\">{this.state.date}</td>\n               <td colspan=\"2\">{this.state.time}</td>\n               <td>{this.state.numberOfTrades}</td>\n           </tr>\n        )\n    }\n\n}\n\nexport default StockRow;\n\n/*\n    <tr>\n        <td>{this.props.name}</td>\n        <td>{this.props.ticker}</td>\n        <td>{this.state.data.price}</td>\n        <td>{this.state.data.date}</td>\n        <td>{this.state.data.time}</td>\n        <td>{this.state.data.numberOfTrades}</td>\n    </tr>\n*/"]},"metadata":{},"sourceType":"module"}